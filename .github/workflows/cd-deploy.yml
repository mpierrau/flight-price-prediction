name: CD Deploy
on:
  push:
    branches:
      - 'develop'
    paths:
      - 'app/**'

env:
  AWS_DEFAULT_REGION: "eu-north-1"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
            aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # Define infrastructure
      - name: TF Plan
        id: tf-plan
        working-directory: "infrastructure/"
        run: |
          terraform init -backend-config="key=flight-price-prediction-prod.tfstate" --reconfigure && terraform plan --var-file vars/prod.tfvars
          echo "ecr_repo=$(terraform output ecr_repo | xargs)" >> $GITHUB_OUTPUT

        # Build and push to ECR
        # Assumes ECR is already created by TF
      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: login-ecr

      - name: Build, tag, and push image to ECR
        id: build-image-step
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ steps.tf-plan.outputs.ecr_repo }}
          IMAGE_TAG: "latest"
        run: |
          docker build -t ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG} .
          docker push ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG}
          echo "image_uri=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: TF Apply ECR
        id: tf-apply-ecr
        working-directory: "infrastructure/"
        if: ${{ steps.tf-plan.outcome }} == 'success'
        run: |
          terraform apply  -auto-approve --var-file vars/prod.tfvars
          echo "ecr_repo=$(terraform output ecr_repo | xargs)" >> $GITHUB_OUTPUT
          echo "endpoint_name=$(terraform output endpoint_name | xargs)" >> $GITHUB_OUTPUT
